#! /usr/bin/env ruby

require 'pg'


DB = PG.connect(dbname: 'expenses')

def list_expenses
  result = DB.exec('SELECT * FROM expenses ORDER BY created_on DESC;')

  result.each do |row|
    columns = [ row["id"].rjust(3),
                row["created_on"][0..10].rjust(10),
                row["amount"].rjust(12),
                row["memo"] ]

    puts columns.join(" | ")
  end
end

def display_help
  puts %(
    An expense recording system

    Commands:

    add AMOUNT MEMO [DATE] - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
  )
end

def add_expenses(amount, memo)
  sql = "INSERT INTO expenses (amount, memo)
         VALUES ($1, $2);"
  DB.exec_params(sql, [amount, memo]).values
end

case ARGV.first
 when 'list'
   list_expenses
 when 'add'
   amount = ARGV[1]
   memo = ARGV[2]
   # Kernel.abort will exit with code 1 and a message
   abort "You must provide an amount and memo." unless amount && memo
   add_expenses(amount, memo)
 else
   display_help
end
