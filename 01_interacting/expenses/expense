#! /usr/bin/env ruby

# run by $ ./expense

require 'pg'

class CLI

  def initialize
    @application = ExpenseData.new
  end

  def run(arguments)
    case arguments.first
     when 'list'
       @application.list_expenses
     when 'add'
       amount = arguments[1]
       memo = arguments[2]
       # Kernel.abort will exit with code 1 and a message
       abort "You must provide an amount and memo." unless amount && memo
       @application.add_expenses(amount, memo)
     else
       display_help
    end
  end

  def display_help
    puts %(
      An expense recording system

      Commands:

      add AMOUNT MEMO [DATE] - record a new expense
      clear - delete all expenses
      list - list all expenses
      delete NUMBER - remove expense with id NUMBER
      search QUERY - list expenses with a matching memo field
    )
  end
end

class ExpenseData

  def initialize
    @db = PG.connect(dbname: 'expenses')
  end

  def list_expenses
    result = @db.exec('SELECT * FROM expenses ORDER BY created_on DESC;')

    result.each do |row|
      columns = [ row["id"].rjust(3),
                  row["created_on"][0..10].rjust(10),
                  row["amount"].rjust(12),
                  row["memo"] ]

      puts columns.join(" | ")
    end
  end

  def add_expenses(amount, memo)
    sql = "INSERT INTO expenses (amount, memo)
           VALUES ($1, $2);"
    @db.exec_params(sql, [amount, memo]).values
  end

end

CLI.new.run(ARGV)
